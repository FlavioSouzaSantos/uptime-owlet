extend type Query {
    hasUser:Boolean
    readUser(id: Int!): User
}

extend type Mutation {
    createUser(input: CreateUserInput!) : User
    changePassword(input: ChangePasswordInput!) : Boolean
    auth(login: String!, password:String!): TokenOut
}

type User {
    id: Int!
    login: String!
}

type TokenOut {
    type: String!
    value: String!
    key: String!
    expiration: DateTime!
}

input CreateUserInput {
    login: String!
    password:String!
    passwordConfirmation:String!
}

input ChangePasswordInput {
    id: Int!
    currentPassword: String!
    newPassword:String!
}